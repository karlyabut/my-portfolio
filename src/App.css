.particle {
  position: absolute;
  width: 100%;
  height: 100%;
  opacity: 0.5;
}

.header {
  background: linear-gradient(to right, #545454 90%, #FFDE59);
}

.headerChild {
  position: absolute;
}

.name {
  font-size: 5em;
  margin-top: 0;
  margin-bottom: 0;
}
/* circle container for image */
.circle-image {
  width: 200px;
  height: 200px;
  background-image: url('https://picsum.photos/id/237/200/300');
  background-size: cover;
  display: block;
  border-radius: 100px;
  border-bottom-right-radius: 100px;
}

.info-container {
  display: flex;
  flex-direction: column;
  height: 100vh;
  position: relative;
  align-items: center;
  justify-content: center;
  margin-left: auto;
  margin-right: auto;
}

.aboutMe {
  width: 50%;
  padding-top: 50px;
  margin-left: auto;
  margin-right: auto;
  margin-top: auto;
  margin-bottom: auto;
}

.descP {
  font-size: 1.25rem;
  line-height: 1.5;
}

.myProject {
  width: 100%;
  text-align: center;
}

.allProjects {
  padding-top: 75px;
}

.projectImage {
  width: auto;
  max-height: 100%;
}

.projectsContainer {
  width: 100%;
}


.firstDesc {
  width: 25%;
  float: left;
}

.firstCarouselContainer {
  width: 75%;
  float: right;
}


/* Tiny reset thingy */
/* body,html{margin:0;padding:0;} */

.wrapper {
  /* The height needs to be set to a fixed value for the effect to work.
   * 100vh is the full height of the viewport. */
  height: 100vh;
  /* The scaling of the images would add a horizontal scrollbar, so disable x overflow. */
  overflow-x: hidden;
  /* Enable scrolling on the page. */
  overflow-y: auto;
  /* Set the perspective to 2px. This is essentailly the simulated distance from the viewport to transformed objects.*/
  perspective: 2px;
}

.section {
  /* Needed for children to be absolutely positioned relative to the parent. */
  position: relative;
  /* The height of the container. Must be set, but it doesn't really matter what the value is. */
  height: 100vh;
  
  /* For text formatting. */
  display: flex;
  color: white;
  text-shadow: 0 0 5px #000;
}


.parallax::after {
  /* Display and position the pseudo-element */
  content: " ";
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  
  /* Move the pseudo-element back away from the camera,
   * then scale it back up to fill the viewport.
   * Because the pseudo-element is further away, it appears to move more slowly, like in real life. */
  transform: translateZ(-1px) scale(1.5);
  /* Force the background image to fill the whole element. */
  background-size: 100%;
  /* Keep the image from overlapping sibling elements. */ 
  z-index: -1;
}

/* The styling for the static div. */
.about {
  height: auto;
  background: #ffffff;
  color: #000;
  text-shadow: 0 0 0;
}

.project {
  overflow: auto;
  background: #545454;
  color: #ffffff;
  text-shadow: 0 0 0;
}


/* Sets the actual background images to adorable kitties. This part is crucial. */
.bgHeader::after {
  background-image: url('./images/headerImage.jpg');
  background-size: cover;
  background-repeat: no-repeat;
  background-position: center;
}

.bgProject::after {
  background-image: url('./images/projectsImage.png');
  background-size: cover;
  background-repeat: no-repeat;
  background-position: center;
  opacity: 0.2;
}